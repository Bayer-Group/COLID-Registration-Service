{
  "ConnectionStrings": {
    "colidDomain": "pid.bayer.com",
    "colidFrontEndUrl": "http://localhost:4200/",
    "dmpFrontEndUrl": "http://localhost:4301/",
    "appDataServiceUrl": "http://localhost:51810",
    "indexingCrawlerServiceUrl": "http://localhost:51780",
    "ironMountainConnectionUrl": "<injected via env variables / user secrets>",
    "ironMountainAccessTokenUrl": "<injected via env variables / user secrets>",
    "searchServiceConnectionUrl": "http://localhost:51800/api/search",
    "appDataServiceConnectionUrl": "http://localhost:51810/api/Messages/sendGenericMessage",
    "s3AccessLinkPrefix": "<injected via env variables / user secrets>",
    "proxyDynamoDbTablename": "<injected via env variables / user secrets>"
  },
  "AllowAnonymous": true,
  "AzureAd": {
    "Instance": "https://login.microsoftonline.com/",
    "Domain": "yourdomain.onmicrosoft.com",
    "TenantId": "<tenant id>",
    "ClientId": "<registration service client id>"
  },
  "AmazonWebServicesOptions": {
    "S3Region": "<injected via env variables / user secrets>",
    "S3BucketForFiles": "<injected via env variables / user secrets>",
    "S3BucketForGraphs": "<injected via env variables / user secrets>",
    "S3AccessIamRoleArn": "<injected via env variables / user secrets>",
    "S3BucketForImportExcelInput": "<injected via env variables / user secrets>",    
    "S3UseMinIo": true,
    "S3ServiceUrl": "http://localhost:9000",
    "UseLocalCredentials": true,
    "AccessKeyId": "<set manually>",
    "SecretAccessKey": "<set manually>"
  },
  "ColidSwaggerOptions": {
    "ClientId": "<registration swagger client id>",
    "ContactEmail": "<injected via env variables / user secrets>",
    "EnvironmentLabel": "Local",
    "DocumentationUrl": "https://bayer-group.github.io/COLID-Documentation/#/",
    "DocumentationApiUrl": "https://bayer-group.github.io/COLID-Documentation/#/application-parts/registration-service/api",
    "Scopes": {
      "Resource.Read.All": "Read access to all resources",
      "Resource.ReadWrite": "Read and write access to any resource"
    }
  },
  "ColidAppDataServiceTokenOptions": {
    "Enabled": false,
    "ServiceId": "<appdata service client id>",
    "ClientSecret": "<injected via env variables / user secrets>"
  },
  "ColidIndexingCrawlerServiceTokenOptions": {
    "Enabled": false,
    "ServiceId": "<indexing crawler service client id>",
    "ClientSecret": "<injected via env variables / user secrets>"
  },
  "ColidCacheOptions": {
    "Enabled": true,
    "UseInMemory": false,
    "EndpointUrls": [ "localhost:6379" ],
    "Password": "<injected via env variables / user secrets>",
    "AbsoluteExpirationRelativeToNow": 300,
    "SyncTimeout": 5000,
    "KeepAlive": 60,
    "ReconnectRetryPolicy": 2000,
    "AbortOnConnectFail": false,
    "AllowAdmin": true
  },
  "ColidStatisticsLogOptions": {
    "Enabled": false,
    "BaseUri": "http://localhost:9200",
    "DefaultIndex": "colid-dev-log",
    "AwsRegion": "<injected via env variables / user secrets>",
    "ProductName": "colid",
    "LayerName": "registration-service",
    "AnonymizerKey": "<injected via env variables / user secrets>"
  },
  "ColidMessageQueueOptions": {
    "Enabled": true,
    "UseSsl": false,
    "HostName": "localhost",
    "Username": "guest",
    "Password": "guest",
    "ExchangeName": "colid.events",
    "Topics": {
      "ReindexingResources": "colid.resources.reindexing",
      "IndexingResources": "colid-resources.indexing",
      "IndexingResourceDocument": "colid-resources.document.indexing",
      "TargetURLChecking": "colid-resources.distributionendpoint.checking",
      "ResourceCreation": "dev-colid-resources.creating",
      "ResourceEdit": "dev-colid-resources.editing",
      "ProxyConfigRebuild": "dev-colid-proxy-rebuild"
    }
  },
  "ColidTripleStoreOptions": {
    "ReadUrl": "http://localhost:3030/colid-dataset/query",
    "UpdateUrl": "http://localhost:3030/colid-dataset/update",
    "LoaderUrl": "http://localhost:3030/colid-dataset/update",
    "Username": "admin",
    "Password": "admin"
  },
  "IronMountainAuthentication": {
    "grant_type": "<injected via env variables / user secrets>",
    "client_id": "<injected via env variables / user secrets>",
    "client_secret": "<injected via env variables / user secrets>"
  },
  "AWSSQSConfiguration": {
    "ResourceInputQueueUrl": "<injected via env variables / user secrets>",
    "ResourceOutputQueueUrl": "<injected via env variables / user secrets>",
    "LinkingInputQueueUrl": "<injected via env variables / user secrets>",
    "LinkingOutputQueueUrl": "<injected via env variables / user secrets>"
  }
}